export declare class DatabaseStorage {
    createUser(userData: any): Promise<any>;
    getUserByUsername(username: string): Promise<any>;
    getUserById(id: number): Promise<any>;
    getAllUsers(): Promise<any[]>;
    updateUser(id: number, updateData: any): Promise<any>;
    deleteUser(id: number): Promise<boolean>;
    createTransaction(transactionData: any): Promise<any>;
    getAllTransactions(limit?: number, offset?: number): Promise<any[]>;
    getTransactionById(id: number): Promise<any>;
    updateTransaction(id: number, updateData: any): Promise<any>;
    deleteTransaction(id: number): Promise<boolean>;
    createSupplier(supplierData: any): Promise<any>;
    getAllSuppliers(): Promise<any[]>;
    getSupplierById(id: number): Promise<any>;
    updateSupplier(id: number, updateData: any): Promise<any>;
    deleteSupplier(id: number): Promise<boolean>;
    getTodayStats(): Promise<any>;
    getWeekStats(): Promise<any>;
    getMonthStats(): Promise<any>;
    getYearStats(): Promise<any>;
    getDashboardTotals(): Promise<any>;
    getWeeklyStatistics(): Promise<any[]>;
    getRecentTransactions(limit?: number): Promise<any[]>;
    getTopSuppliers(limit?: number): Promise<any[]>;
    getBills(limit?: number, offset?: number): Promise<any[]>;
    getExpenditures(limit?: number, offset?: number): Promise<any[]>;
    getSupplierPayments(supplierId?: number): Promise<any[]>;
    getGroupedExpenditures(limit?: number, offset?: number): Promise<any[]>;
    getPurchaseOrders(limit?: number, offset?: number): Promise<any[]>;
    getNotifications(userId?: number): Promise<any[]>;
    getUserSettings(userId?: number): Promise<any>;
    getActivityLog(userId?: number): Promise<any[]>;
    searchTransactions(query: string): Promise<any[]>;
    searchSuppliers(query: string): Promise<any[]>;
    searchInventory(query: string): Promise<any[]>;
    getAllPermissions(): Promise<any[]>;
    getAllReports(): Promise<any[]>;
    getReportsByDateRange(dateRange: string): Promise<any[]>;
    getInventory(): Promise<any[]>;
    createInventoryItem(itemData: any): Promise<any>;
    getInventoryItem(id: number): Promise<any>;
    updateInventoryItem(id: number, updateData: any): Promise<any>;
    deleteInventoryItem(id: number): Promise<boolean>;
    getLowStockItems(): Promise<any[]>;
}
declare const storage: DatabaseStorage;
export declare function ensureDefaultUser(username: string, password: string, role: string): Promise<void>;
export { storage };
export default storage;
//# sourceMappingURL=storage.d.ts.map